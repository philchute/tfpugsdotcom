@page
@model tfpugsdotcom.Pages.LeaguesModel
@using tfpugsdotcom.Models
@using tfpugsdotcom.Models.ApiResponses
@using System.Linq

@{
    ViewData["Title"] = "Leagues";

    // Helper to create a lookup for team details by ID
    var teamsLookup = Model.SelectedLeagueDetails?.Standings.ToDictionary(s => s.TeamId, s => s)
                      ?? new Dictionary<string, LeagueStanding>();

    // Helper to process matches for quick lookup
    var matchResultsLookup = new Dictionary<(string, string), List<LeagueMatch>>();
    if (Model.SelectedLeagueDetails?.Matches != null)
    {
        foreach (var match in Model.SelectedLeagueDetails.Matches)
        {
            var key = string.Compare(match.Team1Id, match.Team2Id) < 0
                ? (match.Team1Id, match.Team2Id)
                : (match.Team2Id, match.Team1Id);
            
            if (!matchResultsLookup.ContainsKey(key))
            {
                matchResultsLookup[key] = new List<LeagueMatch>();
            }
            matchResultsLookup[key].Add(match);
        }
    }
}

<style>
    .match-grid-table th, .match-grid-table td {
        width: 65px;
        height: 65px;
        text-align: center;
        vertical-align: middle;
        padding: 0.25rem;
    }
    .match-grid-table .team-logo {
        width: 32px;
        height: 32px;
        object-fit: contain;
    }
    /* Cell with a played match */
    .match-grid-table .match-cell {
        background-color: #343a40; /* Dark Gray */
        font-size: 0.8rem;
        border: 1px solid #454d55;
    }
    /* Cell where a match hasn't been played or doesn't exist */
    .match-grid-table .empty-cell {
        background-color: #454d55; /* Lighter Gray */
        border: 1px solid #343a40;
    }
    .match-grid-table .match-cell a {
        color: #dee2e6;
        text-decoration: none;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        height: 100%;
        width: 100%;
        font-weight: bold;
    }
    .match-grid-table .match-cell a:hover {
        background-color: #495057;
        border-radius: 4px;
    }
    .match-grid-table .week-label {
        font-size: 0.7rem;
        font-weight: normal;
        color: #adb5bd;
    }
    .home-away-label {
        font-size: 0.8rem;
        font-weight: bold;
        transform: rotate(-45deg);
        white-space: nowrap;
        display: inline-block;
    }
    .match-grid-table > thead > tr > th,
    .match-grid-table > tbody > tr > th {
        background-color: #212529;
        text-align: center;
        vertical-align: middle;
    }
    .match-grid-table > thead > tr > th:first-child,
    .match-grid-table > tbody > tr > th {
        width: 65px; /* Ensure row headers have a fixed width */
    }
</style>

<div class="container mt-4">
    <h1 class="page-title">@ViewData["Title"]</h1>

    @if (Model.LeagueOptions.Any())
    {
        <form method="get" class="mb-4 p-3 border rounded bg-light">
            <div class="row align-items-end justify-content-center">
                <div class="col-md-6">
                    <label asp-for="SelectedLeagueId" class="form-label fw-bold">Select a League:</label>
                    <select asp-for="SelectedLeagueId" asp-items="Model.LeagueOptions" class="form-select" onchange="this.form.submit()"></select>
                </div>
            </div>
        </form>
    }

    @if (!string.IsNullOrEmpty(Model.ErrorMessage))
    {
        <div class="alert alert-danger" role="alert">
            @Model.ErrorMessage
        </div>
    }

    @if (Model.SelectedLeagueDetails != null)
    {
        var league = Model.SelectedLeagueDetails;
        <h2 class="text-center mb-3">@league.Name <span class="text-muted">(@league.Status.Replace("_", " ").ToUpper())</span></h2>
        
        <div class="row">
            <!-- Standings -->
            <div class="col-lg-5 mb-4">
                <div class="card shadow-sm">
                    <div class="card-header">
                        <h4 class="mb-0">Standings</h4>
                    </div>
                    <div class="table-responsive">
                        <table class="table table-striped table-hover mb-0">
                            <thead class="table-dark">
                                <tr>
                                    <th scope="col" class="text-center">#</th>
                                    <th scope="col" style="width: 50px;"></th>
                                    <th scope="col">Team</th>
                                    <th scope="col" class="text-center">W</th>
                                    <th scope="col" class="text-center">L</th>
                                    <th scope="col" class="text-center">D</th>
                                </tr>
                            </thead>
                            <tbody>
                                @for (int i = 0; i < league.Standings.Count; i++)
                                {
                                    var standing = league.Standings[i];
                                    <tr>
                                        <th scope="row" class="text-center align-middle">@(i + 1)</th>
                                        <td class="text-center align-middle">
                                            <img src="@(standing.ImageUrl ?? "/images/default_team_logo.svg")" alt="@standing.Name" class="img-fluid rounded" style="width: 32px; height: 32px;" />
                                        </td>
                                        <td class="align-middle">
                                            <a asp-page="/Team" asp-route-id="@standing.TeamId">@standing.Name</a>
                                        </td>
                                        <td class="text-center align-middle">@standing.Wins</td>
                                        <td class="text-center align-middle">@standing.Losses</td>
                                        <td class="text-center align-middle">@standing.Draws</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            <!-- Match Grid -->
            <div class="col-lg-7">
                <div class="card shadow-sm">
                    <div class="card-header">
                        <h4 class="mb-0">Schedule & Results</h4>
                    </div>
                    <div class="card-body table-responsive">
                        @if (teamsLookup.Any() && league.Matches.Any())
                        {
                            var teams = teamsLookup.Values.OrderBy(t => t.Name).ToList();
                            <table class="table table-bordered table-dark match-grid-table">
                                <thead>
                                    <tr>
                                        <th style="border-color: #444;">
                                            <span class="home-away-label">HOME/AWAY</span>
                                        </th>
                                        @foreach (var team in teams)
                                        {
                                            <th>
                                                <img src="@(team.ImageUrl ?? "/images/default_team_logo.svg")" alt="@team.Name" class="team-logo" />
                                            </th>
                                        }
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var rowTeam in teams)
                                    {
                                        <tr>
                                            <th>
                                                <img src="@(rowTeam.ImageUrl ?? "/images/default_team_logo.svg")" alt="" class="team-logo" />
                                            </th>
                                            @foreach (var colTeam in teams)
                                            {
                                                if (rowTeam.TeamId == colTeam.TeamId)
                                                {
                                                    <td class="empty-cell" style="background-color: #212529;"></td>
                                                }
                                                else
                                                {
                                                    var key = string.Compare(rowTeam.TeamId, colTeam.TeamId) < 0 ? (rowTeam.TeamId, colTeam.TeamId) : (colTeam.TeamId, rowTeam.TeamId);
                                                    
                                                    if (matchResultsLookup.TryGetValue(key, out var results))
                                                    {
                                                        foreach(var result in results)
                                                        {
                                                            <td class="match-cell">
                                                                @if (!string.IsNullOrEmpty(result.LeagueMatchId))
                                                                {
                                                                    <a asp-page="/MatchDetails" asp-route-id="@result.LeagueMatchId" title="View Match @result.LeagueMatchId">
                                                                        @if(result.Status?.ToLower() == "completed")
                                                                        {
                                                                            var us_score = result.Team1Id == rowTeam.TeamId ? result.ScoreTeam1 : result.ScoreTeam2;
                                                                            var them_score = result.Team1Id == colTeam.TeamId ? result.ScoreTeam1 : result.ScoreTeam2;
                                                                            <span class="score">@us_score - @them_score</span>
                                                                        }
                                                                        else 
                                                                        {
                                                                            <span class="text-muted">@result.Status</span>
                                                                        }
                                                                        <span class="week-label">Week @result.Week</span>
                                                                    </a>
                                                                }
                                                                else
                                                                {
                                                                    <div class="d-flex flex-column justify-content-center align-items-center h-100">
                                                                        @if(result.Status?.ToLower() == "completed")
                                                                        {
                                                                            var us_score = result.Team1Id == rowTeam.TeamId ? result.ScoreTeam1 : result.ScoreTeam2;
                                                                            var them_score = result.Team1Id == colTeam.TeamId ? result.ScoreTeam1 : result.ScoreTeam2;
                                                                            <span class="score">@us_score - @them_score</span>
                                                                        }
                                                                        else 
                                                                        {
                                                                            <span class="text-muted">@result.Status</span>
                                                                        }
                                                                        <span class="week-label">Week @result.Week</span>
                                                                    </div>
                                                                }
                                                            </td>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <td class="empty-cell"></td>
                                                    }
                                                }
                                            }
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        }
                        else
                        {
                            <p class="text-center fst-italic">No match results available to display.</p>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
    else if(Model.AllLeagues.Any() && string.IsNullOrEmpty(Model.ErrorMessage))
    {
         <p class="text-center alert alert-info">Select a league to view its details.</p>
    }
    else if (string.IsNullOrEmpty(Model.ErrorMessage))
    {
        <p class="text-center alert alert-info">There are no leagues available to display at this time.</p>
    }
</div> 