@page "/Team/{Id}"
@model tfpugsdotcom.Pages.TeamModel
@{
    ViewData["Title"] = Model.TeamDetails?.Name ?? "Team Profile";
}

<div class="container mt-4">

    @if (!string.IsNullOrEmpty(Model.ErrorMessage))
    {
        <div class="alert alert-danger text-center">@Model.ErrorMessage</div>
    }
    else if (Model.TeamDetails != null)
    {
        var team = Model.TeamDetails;

        <div class="text-center">
            <img src="@(team.ImageUrl ?? "/images/default_team_logo.svg")" alt="@team.Name Logo" class="rounded-circle mb-3" style="width: 120px; height: 120px; object-fit: cover; border: 3px solid #dee2e6;" />
            <h1 class="page-title">@team.Name</h1>
            @if (!string.IsNullOrEmpty(team.Description))
            {
                <p class="lead fst-italic">"@team.Description"</p>
            }
        </div>

        <!-- Team Stats -->
        <div class="card shadow-sm mb-4">
            <div class="card-header">
                <h4 class="mb-0">Team Stats (@team.GameId)</h4>
            </div>
            <div class="card-body">
                <div class="row text-center">
                    <div class="col">
                        <h5>@team.Wins</h5>
                        <small class="text-muted">Wins</small>
                    </div>
                    <div class="col">
                        <h5>@team.Losses</h5>
                        <small class="text-muted">Losses</small>
                    </div>
                    <div class="col">
                        <h5>@team.Draws</h5>
                        <small class="text-muted">Draws</small>
                    </div>
                    <div class="col">
                        <h5>@(team.Elo.HasValue ? team.Elo.Value.ToString() : "N/A")</h5>
                        <small class="text-muted">ELO</small>
                    </div>
                </div>
            </div>
        </div>

        <!-- Roster -->
        <div class="card shadow-sm mb-4">
            <div class="card-header">
                <h4 class="mb-0">Roster</h4>
            </div>
            <div class="list-group list-group-flush">
                @foreach (var member in team.Members.OrderBy(m => m.Role != "captain").ThenBy(m => m.Name))
                {
                    <a asp-page="/Players" asp-route-id="@member.DiscordId" class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
                        <div class="d-flex align-items-center">
                            @if (!string.IsNullOrEmpty(member.AvatarUrl))
                            {
                                <img src="@member.AvatarUrl" alt="@member.Name" class="me-2" style="width: 24px; height: 24px; border-radius: 50%;" />
                            }
                            else if (!string.IsNullOrEmpty(member.AvatarDisplayString))
                            {
                                <span class="me-2" style="width: 24px; display: inline-block; text-align: center;">@Html.Raw(member.AvatarDisplayString)</span>
                            }
                            @member.Name
                        </div>
                        @if (member.Role.ToLower() == "captain")
                        {
                            <span class="badge bg-primary rounded-pill">Captain</span>
                        }
                        else
                        {
                            <span class="badge bg-secondary rounded-pill">@member.Role</span>
                        }
                    </a>
                }
            </div>
        </div>


        <!-- Match History -->
        <h3 class="mt-5 text-center">Recent Matches</h3>
        <hr />
        <div class="card shadow-sm">
             @if (!string.IsNullOrEmpty(Model.MatchHistoryErrorMessage))
            {
                <div class="card-body">
                    <div class="alert alert-warning text-center">@Model.MatchHistoryErrorMessage</div>
                </div>
            }
            else if (Model.MatchHistoryData != null && Model.MatchHistoryData.Matches.Any())
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover table-sm mb-0" style="font-size: 0.9rem;">
                        <thead class="table-dark">
                            <tr>
                                <th class="text-center">MATCH ID</th>
                                <th class="text-center">DATE</th>
                                <th class="text-center">MAP</th>
                                <th>TEAMS</th>
                                <th class="text-center">SCORE</th>
                                <th class="text-center">OUTCOME</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var match in Model.MatchHistoryData.Matches)
                            {
                                int teamNumber = 0;
                                if (match.Team1Id == team.TeamId) teamNumber = 1;
                                else if (match.Team2Id == team.TeamId) teamNumber = 2;

                                string outcome;
                                string outcomeClass = "";

                                if (match.WinnerTeam.HasValue && teamNumber != 0)
                                {
                                    if (match.WinnerTeam.Value == 0) {
                                        outcome = "Draw";
                                        outcomeClass = "";
                                    } else if (match.WinnerTeam.Value == teamNumber) {
                                        outcome = "Win";
                                        outcomeClass = "text-success fw-bold";
                                    } else {
                                        outcome = "Loss";
                                        outcomeClass = "text-danger fw-bold";
                                    }
                                }
                                else
                                {
                                    outcome = "N/A";
                                }

                                <tr>
                                    <td class="text-center align-middle"><a asp-page="/MatchDetails" asp-route-id="@match.MatchDisplayId">@match.MatchDisplayId</a></td>
                                    <td class="text-center align-middle">@match.MatchEndTime.ToLocalTime().ToString("yyyy-MM-dd")</td>
                                    <td class="text-center align-middle">@match.MapName</td>
                                    <td class="align-middle">
                                        <div><a asp-page="/Team" asp-route-id="@match.Team1Id">@match.Team1Name</a></div>
                                        <div><a asp-page="/Team" asp-route-id="@match.Team2Id">@match.Team2Name</a></div>
                                    </td>
                                    <td class="text-center align-middle">@match.ScoreTeam1 - @match.ScoreTeam2</td>
                                    <td class="text-center align-middle @outcomeClass">@outcome</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Pagination for Match History -->
                @if (Model.MatchHistoryData != null && Model.MatchHistoryData.TotalPages > 1)
                {
                    <div class="card-footer">
                        <nav aria-label="Match history navigation">
                            <ul class="pagination justify-content-center mb-0">
                                <li class="page-item @(Model.MatchHistoryCurrentPage == 1 ? "disabled" : "")">
                                    <a class="page-link" asp-page="/Team" asp-route-id="@Model.Id" asp-route-MatchHistoryCurrentPage="1">First</a>
                                </li>
                                <li class="page-item @(Model.MatchHistoryData.PrevPageUrl == null ? "disabled" : "")">
                                    <a class="page-link" asp-page="/Team" asp-route-id="@Model.Id" asp-route-MatchHistoryCurrentPage="@(Model.MatchHistoryCurrentPage - 1)">Previous</a>
                                </li>
                                <li class="page-item active" aria-current="page">
                                    <span class="page-link">Page @Model.MatchHistoryCurrentPage of @Model.MatchHistoryData.TotalPages</span>
                                </li>
                                <li class="page-item @(Model.MatchHistoryData.NextPageUrl == null ? "disabled" : "")">
                                    <a class="page-link" asp-page="/Team" asp-route-id="@Model.Id" asp-route-MatchHistoryCurrentPage="@(Model.MatchHistoryCurrentPage + 1)">Next</a>
                                </li>
                                <li class="page-item @(Model.MatchHistoryCurrentPage >= Model.MatchHistoryData.TotalPages ? "disabled" : "")">
                                    <a class="page-link" asp-page="/Team" asp-route-id="@Model.Id" asp-route-MatchHistoryCurrentPage="@Model.MatchHistoryData.TotalPages">Last</a>
                                </li>
                            </ul>
                        </nav>
                    </div>
                }
            }
            else
            {
                <div class="card-body">
                    <p class="text-center mt-3 mb-0">No match history available for this team.</p>
                </div>
            }
        </div>
    }
    else
    {
        <p class="text-center alert alert-info">Team details are loading or could not be found.</p>
    }
</div> 